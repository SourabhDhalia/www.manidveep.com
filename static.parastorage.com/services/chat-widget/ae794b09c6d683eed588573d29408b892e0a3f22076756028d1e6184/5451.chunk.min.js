(self.webpackJsonp__wix_chat_widget = self.webpackJsonp__wix_chat_widget || []).push([
    [5451], {
        16307: function(t, e, n) {
            "use strict";
            var i = this && this.__createBinding || (Object.create ? function(t, e, n, i) {
                    void 0 === i && (i = n), Object.defineProperty(t, i, {
                        enumerable: !0,
                        get: function() {
                            return e[n]
                        }
                    })
                } : function(t, e, n, i) {
                    void 0 === i && (i = n), t[i] = e[n]
                }),
                s = this && this.__exportStar || function(t, e) {
                    for (var n in t) "default" === n || Object.prototype.hasOwnProperty.call(e, n) || i(e, t, n)
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.PresenceService = void 0;
            var r = n(47242);
            e.PresenceService = function(t, e) {
                var n = new r.AmbassadorHTTPClient(t, e);
                return {
                    PresenceService: function() {
                        return function(t) {
                            var e = {
                                resetScope: function(e) {
                                    return n.invoke("POST", "/api/v1/reset-scope", e, t)
                                },
                                setData: function(e) {
                                    return n.invoke("POST", "/api/v1/set-data", e, t)
                                },
                                watch: function(e) {
                                    return n.invoke("POST", "/api/v1/watch", e, t)
                                }
                            };
                            return e.resetScope.__http_method = "POST", e.resetScope.__http_url = "/api/v1/reset-scope", e.setData.__http_method = "POST", e.setData.__http_url = "/api/v1/set-data", e.watch.__http_method = "POST", e.watch.__http_url = "/api/v1/watch", e
                        }
                    }
                }
            }, e.PresenceService.__transport = "http", s(n(61434), e)
        },
        61434: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        },
        74883: function(t, e, n) {
            "use strict";
            var i, s = n(13158),
                r = this && this.__extends || (i = function(t, e) {
                    return i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(t, e) {
                        t.__proto__ = e
                    } || function(t, e) {
                        for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
                    }, i(t, e)
                }, function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");

                    function n() {
                        this.constructor = t
                    }
                    i(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n)
                }),
                o = this && this.__assign || function() {
                    return o = Object.assign || function(t) {
                        for (var e, n = 1, i = arguments.length; n < i; n++)
                            for (var s in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, s) && (t[s] = e[s]);
                        return t
                    }, o.apply(this, arguments)
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.AmbassadorHTTPClient = e.AmbassadorHTTPError = void 0;
            var a = n(64133),
                c = n(43621),
                u = "x-wix-request-id",
                h = function(t) {
                    function e(n, i, s) {
                        var r, o = t.call(this, "Ambassador client request failed:\nHTTP STATUS: " + n + "\nRESPONSE: " + (((r = i) ? JSON.stringify(r).replace(/\n/g, "\\n") : '""') + "\nSee the httpStatus and response fields for more information.")) || this;
                        return Object.setPrototypeOf(o, e.prototype), o.httpStatus = n, o.response = i, o.requestId = s, o
                    }
                    return r(e, t), e
                }(Error);
            e.AmbassadorHTTPError = h;
            var p = function() {
                function t(t, e) {
                    var n = this;
                    void 0 === e && (e = {}), this.baseUrl = t, this.config = e, this.testkitBaseUrl = "", this.fetchClient = void 0, this.useRedaxios = !1, this.handleFetchResponse = function(t) {
                        return t.ok ? t.json() : n.handleFetchErrors(t)
                    }, this.handleErrors = function(t) {
                        if (n.useRedaxios) return n.handleFetchErrors(t);
                        var e = t;
                        if (e.response) {
                            var i = e.response.headers[u];
                            throw new h(e.response.status, e.response.data, i)
                        }
                        throw new h(-1, "Connection Failed. \n" + e.message)
                    }, this.handleFetchErrors = function(t) {
                        var e = t,
                            n = t;
                        if (n.message) throw new h(-1, n.message);
                        if (e.status) return function(t) {
                            return t.text().then(l).catch((function() {
                                return ""
                            }))
                        }(e).then((function(t) {
                            var n, i = null === (n = e.headers) || void 0 === n ? void 0 : n.get(u);
                            throw new h(e.status, t, i)
                        }));
                        throw new h(-1, "Connection Failed")
                    }, this.baseUrl = this.addTrailingSlash(t), this.assignAxiosClient(), e.fetchInstance && (this.fetchClient = e.fetchInstance), this.ignoredProtoUrlPart = e.ignoredProtoHttpUrlPart
                }
                return t.prototype.assignAxiosClient = function() {
                    var t = this.config;
                    if (t.wixHttpClientInstance) this._axiosClient = t.wixHttpClientInstance;
                    else if (t.axiosInstance) this._axiosClient = t.axiosInstance;
                    else {
                        var e = n(64050).default || n(64050);
                        this.useRedaxios = !0, this._axiosClient = e.create({
                            responseType: "json"
                        })
                    }
                }, t.prototype.fixProtoIgnoredUrlPart = function(t) {
                    var e = t.split(this.ignoredProtoUrlPart);
                    return "" !== e[0] || !e[1].startsWith("/") && "" !== e[1] ? t : t.substr(this.ignoredProtoUrlPart.length, t.length)
                }, t.prototype.invoke = function(t, e, n, i) {
                    var s = this;
                    this.configForTestingIfRequired();
                    var r = this.removeLeadingSlash(this.fixProtoIgnoredUrlPart(e)),
                        a = this.getParamsFromPath(r).reduce((function(t, e) {
                            return t.replace("{" + e + "}", encodeURIComponent(s.getValueFromPayload(n, e)))
                        }), r);
                    if (this.fetchClient) return i = o(o({}, this.createWixHeaders()), i), this.fetchHttpRequest(t, a, n, i);
                    i = o(o({}, this.createWixHeaders({
                        csrf: this.useRedaxios
                    })), i);
                    var c = Object.keys(i).length > 0 ? {
                        headers: i
                    } : void 0;
                    return this.runHttpRequest(t, a, n, c)
                }, t.prototype.runHttpRequest = function(t, e, n, i) {
                    switch (void 0 === i && (i = {}), this.testkitBaseUrl ? e = d(this.testkitBaseUrl, e) : (this.useRedaxios || this.config.wixHttpClientInstance) && (e = d(this.baseUrl, e)), i.method = t, t) {
                        case "GET":
                            return this._axiosClient.get(e + "?" + this.payloadToQueryString(n), i).then((function(t) {
                                return t.data
                            })).catch(this.handleErrors);
                        case "POST":
                            return this._axiosClient.post(e, n, i).then((function(t) {
                                return t.data
                            })).catch(this.handleErrors);
                        case "PUT":
                            return this._axiosClient.put(e, n, i).then((function(t) {
                                return t.data
                            })).catch(this.handleErrors);
                        case "PATCH":
                            return this._axiosClient.patch(e, n, i).then((function(t) {
                                return t.data
                            })).catch(this.handleErrors);
                        case "DELETE":
                            return this._axiosClient.delete(e + "?" + this.payloadToQueryString(n), i).then((function(t) {
                                return t.data
                            })).catch(this.handleErrors);
                        default:
                            return null
                    }
                }, t.prototype.createWixHeaders = function(t) {
                    return this.config.wixHttpClientInstance ? {} : (0, a.createHeaders)(t)
                }, t.prototype.fetchHttpRequest = function(t, e, n, i) {
                    var s = d(this.testkitBaseUrl || this.baseUrl, e);
                    switch (t) {
                        case "GET":
                            return this.fetchClient(s + "?" + this.payloadToQueryString(n), {
                                method: "GET",
                                headers: i
                            }).then(this.handleFetchResponse, this.handleFetchErrors);
                        case "POST":
                            return this.fetchClient(s, {
                                method: "POST",
                                headers: this.mergeHeadersWithContentType(i || {}),
                                body: JSON.stringify(n)
                            }).then(this.handleFetchResponse, this.handleFetchErrors);
                        case "PUT":
                            return this.fetchClient(s, {
                                method: "PUT",
                                headers: this.mergeHeadersWithContentType(i || {}),
                                body: JSON.stringify(n)
                            }).then(this.handleFetchResponse, this.handleFetchErrors);
                        case "PATCH":
                            return this.fetchClient(s, {
                                method: "PATCH",
                                headers: this.mergeHeadersWithContentType(i || {}),
                                body: JSON.stringify(n)
                            }).then(this.handleFetchResponse, this.handleFetchErrors);
                        case "DELETE":
                            return this.fetchClient(s + "?" + this.payloadToQueryString(n), {
                                method: "DELETE",
                                headers: i
                            }).then(this.handleFetchResponse, this.handleFetchErrors);
                        default:
                            return null
                    }
                }, t.prototype.mergeHeadersWithContentType = function(t) {
                    return o(o({}, {
                        "Content-Type": "application/json"
                    }), t)
                }, t.prototype.configForTestingIfRequired = function() {
                    var t;
                    s.env.AMBASSADOR_TESTKIT_HTTP_URL && (t = s.env.AMBASSADOR_TESTKIT_HTTP_URL), "undefined" != typeof window && window.__AMBASSADOR_TESTKIT_HTTP_URL && (t = window.__AMBASSADOR_TESTKIT_HTTP_URL), t && (this.testkitBaseUrl = d(t, encodeURIComponent(this.baseUrl)))
                }, t.prototype.payloadToQueryString = function(t) {
                    var e = this;
                    return Object.keys(t).filter((function(e) {
                        return null !== t[e] && void 0 !== t[e]
                    })).map((function(n) {
                        if (t[n] instanceof Array) return e.arrayToQueryString(n, t[n]);
                        if ("object" == typeof t[n]) {
                            var i = Object.keys(t[n]).reduce((function(e, i) {
                                var s;
                                return o(o({}, e), ((s = {})[n + "." + i] = t[n][i], s))
                            }), {});
                            return e.payloadToQueryString(i)
                        }
                        return encodeURIComponent(n) + "=" + encodeURIComponent(t[n])
                    })).join("&")
                }, t.prototype.arrayToQueryString = function(t, e) {
                    return e.map((function(e) {
                        return encodeURIComponent(t) + "=" + encodeURIComponent(e)
                    })).join("&")
                }, t.prototype.getParamsFromPath = function(t) {
                    for (var e = [], n = t; n.match(/\{[^}]+\}/);) {
                        var i = n.match(/\{([^}]+)\}/),
                            s = (i[0], i[1]);
                        e.push(s), n = n.replace(/\{[^}]+\}/, "")
                    }
                    return e
                }, t.prototype.getValueFromPayload = function(t, e) {
                    return e.split(".").reduce((function(t, e) {
                        return t[e] || t[(0, c.snakeToCamelCase)(e)]
                    }), t)
                }, t.prototype.addTrailingSlash = function(t) {
                    return t.endsWith("/") ? t : t + "/"
                }, t.prototype.removeLeadingSlash = function(t) {
                    return t.startsWith("/") ? t.substr(1) : t
                }, t
            }();

            function l(t) {
                try {
                    return JSON.parse(t)
                } catch (e) {
                    return t
                }
            }

            function d(t, e) {
                return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t
            }
            e.AmbassadorHTTPClient = p
        },
        43621: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.getMajorVersion = e.snakeToCamelCase = void 0;
            e.snakeToCamelCase = function(t) {
                return t.replace(/([-_][a-z])/g, (function(t) {
                    return t.toUpperCase().replace("-", "").replace("_", "")
                }))
            };
            e.getMajorVersion = function(t) {
                if (null != t && -1 !== t.indexOf(".")) {
                    var e = Number.parseInt(t.split(".")[0]);
                    if (!Number.isNaN(e)) return e
                }
                return -1
            }
        },
        47242: function(t, e, n) {
            t.exports = n(74883)
        },
        23749: function(t, e, n) {
            "use strict";
            n.d(e, {
                q: function() {
                    return s
                },
                E: function() {
                    return r
                }
            });
            var i = n(59582);

            function s(t, e) {
                if ("boolean" != typeof e) throw new i.W("boolean", t, e)
            }

            function r(t, e) {
                if ("string" != typeof e) throw new i.W("string", t, e)
            }
        },
        82037: function(t, e, n) {
            "use strict";
            n.d(e, {
                v: function() {
                    return s
                }
            });
            var i = n(69363);

            function s(t) {
                const e = function(t) {
                    return function() {
                        const t = (0, i.p)();
                        if (t && t.cookie) return decodeURIComponent(t.cookie).split(";");
                        return []
                    }().filter((e => t === e.split("=")[0].trim()))[0]
                }(t);
                return e ? e.split("=")[1] : ""
            }
        },
        59582: function(t, e, n) {
            "use strict";
            n.d(e, {
                W: function() {
                    return i
                }
            });
            Error;
            class i extends Error {
                constructor(t, e, n) {
                    super(`WixHeadersValidationError: expected ${e} to be ${t} but got ${JSON.stringify(n)}`)
                }
            }
        },
        69363: function(t, e, n) {
            "use strict";

            function i() {
                if ("object" == typeof document) return document
            }

            function s() {
                return "object" == typeof self ? self : n.g
            }
            n.d(e, {
                p: function() {
                    return i
                },
                g: function() {
                    return s
                }
            })
        },
        26394: function(t, e, n) {
            "use strict";
            n.d(e, {
                k: function() {
                    return s
                }
            });
            var i = n(15383);

            function s(t) {
                return {
                    "X-Wix-Client-Artifact-Id": t ? ? ((0, i.y)() ? "" : "chat-widget")
                }
            }
        },
        92938: function(t, e, n) {
            "use strict";

            function i(t) {
                return {
                    authorization: t
                }
            }
            n.d(e, {
                j: function() {
                    return i
                }
            })
        },
        89132: function(t, e, n) {
            "use strict";
            n.d(e, {
                x: function() {
                    return o
                }
            });
            var i = n(69363);
            const s = ["consentPolicy", "consentPolicyHeader"],
                r = {
                    bsi: "BSI"
                };
            const o = () => {
                const t = function() {
                        const t = (0, i.g)(),
                            e = t ? .commonConfig;
                        if (!e) return null;
                        const n = {};
                        let o = !1;
                        return Object.keys(e).forEach((t => {
                            const i = r[t];
                            i ? (n[i] = e[t], o = !0) : s.indexOf(t) < 0 && "function" != typeof e[t] && (n[t] = e[t], o = !0)
                        })), o ? n : null
                    }(),
                    e = t ? JSON.stringify(t) : "";
                return {
                    commonConfig: encodeURIComponent(e)
                }
            }
        },
        72909: function(t, e, n) {
            "use strict";
            n.d(e, {
                D: function() {
                    return s
                }
            });
            var i = n(69363);

            function s() {
                return function() {
                    const t = (0, i.g)();
                    if (t && t.consentPolicyManager && "function" == typeof t.consentPolicyManager._getConsentPolicyHeader) return t.consentPolicyManager._getConsentPolicyHeader();
                    return
                }() || function() {
                    const t = (0, i.g)();
                    if (t && t.Wix && t.Wix.Utils && "function" == typeof t.Wix.Utils._getConsentPolicyHeader) return t.Wix.Utils._getConsentPolicyHeader();
                    return
                }() || {}
            }
        },
        77158: function(t, e, n) {
            "use strict";
            n.d(e, {
                EN: function() {
                    return o
                }
            });
            var i = n(82037);
            const s = "XSRF-TOKEN",
                r = "x-xsrf-token";

            function o() {
                const t = (0, i.v)(s);
                return {
                    [r]: t
                }
            }
        },
        24964: function(t, e, n) {
            "use strict";
            n.d(e, {
                H: function() {
                    return o
                }
            });
            var i = n(88144),
                s = n.n(i);
            const r = "x-wix-linguist";

            function o({
                lang: t,
                locale: e,
                isPrimaryLanguage: n,
                signedInstance: i
            }) {
                if (function({
                        lang: t,
                        locale: e,
                        isPrimaryLanguage: n
                    }) {
                        return t && e && /^(true|false)$/.test(n ? .toString() || "")
                    }({
                        lang: t,
                        locale: e,
                        isPrimaryLanguage: n
                    })) {
                    const o = function(t) {
                        try {
                            const e = t ? .startsWith("wixcode") ? t ? .split(".")[2] : t ? .split(".")[1];
                            if (e) return JSON.parse(s().decode(e)).instanceId
                        } catch (t) {}
                    }(i);
                    if (void 0 !== o) return {
                        [r]: [t, e, n ? .toString(), o].join("|")
                    }
                }
                return {}
            }
        },
        67807: function(t, e, n) {
            "use strict";
            n.d(e, {
                x: function() {
                    return r
                }
            });
            var i = n(69363);
            const s = "x-wix-brand";

            function r() {
                const t = function() {
                    const t = (0, i.g)();
                    if (t && t.commonConfig && "string" == typeof t.commonConfig.brand) return t.commonConfig.brand;
                    return ""
                }();
                return {
                    [s]: t
                }
            }
        },
        64133: function(t, e, n) {
            "use strict";
            n.r(e), n.d(e, {
                createHeaders: function() {
                    return p
                }
            });
            var i = n(77158),
                s = n(67807),
                r = n(72909),
                o = n(92938),
                a = n(26394),
                c = n(89132),
                u = n(24964),
                h = n(23749);

            function p(t = {}) {
                ! function(t) {
                    (0, h.q)("opts.csrf", t.csrf), (0, h.E)("opts.signedInstance", t.signedInstance)
                }(t = {
                    csrf: !0,
                    signedInstance: "",
                    ...t
                });
                const e = [(0, s.x)(), (0, r.D)(), (0, o.j)(t.signedInstance), (0, a.k)(t.artifactId), (0, c.x)(), (0, u.H)({
                    signedInstance: t.signedInstance,
                    ...t.multilingualOptions
                })];
                return t.csrf && e.push((0, i.EN)()), e.filter((t => Object.values(t).every((t => t)))).reduce(((t, e) => ({ ...t,
                    ...e
                })), {})
            }
        },
        15383: function(t, e, n) {
            "use strict";
            n.d(e, {
                y: function() {
                    return s
                }
            });
            var i = n(13158);

            function s() {
                return void 0 !== i && null != i.versions ? .node && (!!i.env.TEAMCITY_VERSION || !!i.env.BUILDKITE)
            }
        },
        85451: function(t, e, n) {
            "use strict";
            n.r(e), n.d(e, {
                ActivityStatus: function() {
                    return a
                },
                DeviceType: function() {
                    return U
                },
                Scope: function() {
                    return o
                },
                Status: function() {
                    return r
                },
                default: function() {
                    return $
                }
            });
            var i = n(92712);

            function s(t, e) {
                if (!t) throw new c(e)
            }
            var r, o, a, c = function(t) {
                    function e(n) {
                        var i = t.call(this, n) || this;
                        return Object.setPrototypeOf(i, e.prototype), i
                    }
                    return (0, i.__extends)(e, t), e
                }(Error),
                u = function() {
                    function t(t) {
                        var e = this;
                        this.opts = t, this.state = {
                            active: !1,
                            running: !1
                        }, this.onIdle = function() {
                            e.state.active = !1, e.opts.onIdle()
                        }, this.onAliveness = function() {
                            e.state.active || e.opts.onActive(), e.state.active = !0, e.removeEventListeners(), e.clearTimeouts(), e.scheduleSample()
                        }, s("number" == typeof t.isIdleTime && t.isIdleTime >= 6e4, "isIdleTime must be a number, bigger than 1 min"), s("function" == typeof t.onIdle, "onIdle must be a function"), s("function" == typeof t.onActive, "onActive must be a function")
                    }
                    return t.prototype.listen = function() {
                        this.state.running || (this.state.running = !0, this.state.active = !0, this.scheduleSample())
                    }, t.prototype.stop = function() {
                        this.state.running = !1, this.clearTimeouts(), this.removeEventListeners()
                    }, t.prototype.scheduleSample = function() {
                        var t = this;
                        this.sampleTimeout = setTimeout((function() {
                            t.sample()
                        }), 3e4)
                    }, t.prototype.sample = function() {
                        this.addEventListeners(), this.idleTimeout = setTimeout(this.onIdle, this.opts.isIdleTime)
                    }, t.prototype.addEventListeners = function() {
                        document.addEventListener("mousemove", this.onAliveness), document.addEventListener("keydown", this.onAliveness)
                    }, t.prototype.removeEventListeners = function() {
                        document.removeEventListener("mousemove", this.onAliveness), document.removeEventListener("keydown", this.onAliveness)
                    }, t.prototype.clearTimeouts = function() {
                        clearTimeout(this.idleTimeout), clearTimeout(this.sampleTimeout)
                    }, t
                }();

            function h(t) {
                return new u(t)
            }

            function p() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t => {
                    const e = 16 * Math.random() | 0;
                    return ("x" === t ? e : 3 & e | 8).toString(16)
                }))
            }

            function l(t) {
                return JSON.parse(JSON.stringify(t))
            }! function(t) {
                t.ONLINE = "ONLINE", t.OFFLINE = "OFFLINE"
            }(r || (r = {})),
            function(t) {
                t.EDITOR_X = "editor-x", t.VIEWER = "viewer"
            }(o || (o = {})),
            function(t) {
                t[t.ACTIVE = 0] = "ACTIVE", t[t.IDLE = 1] = "IDLE"
            }(a || (a = {}));
            var d = n(16307);
            var f, v;
            ! function(t) {
                t[t.INIT = 0] = "INIT", t[t.SUBSCRIBED = 1] = "SUBSCRIBED"
            }(f || (f = {})),
            function(t) {
                t[t.NONE = 0] = "NONE", t[t.STATE = 1] = "STATE", t[t.ACTIVITY = 2] = "ACTIVITY"
            }(v || (v = {}));
            class m {
                constructor({
                    getPresenceConnection: t,
                    scope: e,
                    getSignedInstance: n,
                    initialState: i = {},
                    keepAliveInterval: s = 24e4,
                    isIdleMs: r,
                    onIdle: o,
                    onActive: a
                }) {
                    this.onStateChangeFn = () => {}, this.sessionId = p(), this.trackState = f.INIT, this.lastInactivity = null, this.list = [], this.onDisconnectFn = () => {}, this.shuoldWatchGroup = !0, this.onIdle = () => {
                        this.lastInactivity = Date.now() - this.isIdleMs, this.refreshState(), this.onIdleFn()
                    }, this.onActive = () => {
                        this.lastInactivity = null, this.refreshState(), this.onActiveFn()
                    }, this.watchGroup = async () => {
                        this.shuoldWatchGroup && (await this.presenceClient()).watch({
                            scope: this.scope
                        }).catch((() => {})), this.watchGroupTimer && clearTimeout(this.watchGroupTimer), this.watchGroupTimer = setTimeout((() => this.watchGroup()), 6e5)
                    }, this.onSubscribe = async () => {
                        this.list = [], this.trackState = f.INIT, this.initBatchTimer && clearTimeout(this.initBatchTimer), this.watchGroup(), await this.keepAlive(), this.idle.listen(), this.initBatchTimer = setTimeout((() => {
                            this.trackState = f.SUBSCRIBED, this.onStateChange()
                        }), 2e3)
                    }, this.handleStateChanges = t => {
                        t.data = t.data || {};
                        const e = this.updateList(t);
                        this.trackState === f.SUBSCRIBED && e === v.STATE && this.onStateChange(t)
                    }, this.getPresenceConnection = t, this.getSignedInstance = n, this.keepAliveInterval = s, this.scope = e, this.storeState(i), this.isIdleMs = window.__PRESENCE_IDLE_TIME ? ? r ? ? 6e5, this.onIdleFn = o ? ? (() => {}), this.onActiveFn = a ? ? (() => {}), this.idle = h({
                        isIdleTime: this.isIdleMs,
                        onIdle: this.onIdle,
                        onActive: this.onActive
                    })
                }
                async initPresenceApi() {
                    this.presenceApi || (this.presenceApi = (0, d.PresenceService)("/_api/presence-service", {
                        ignoredProtoHttpUrlPart: "/api"
                    }).PresenceService())
                }
                track(t, e) {
                    this.onStateChangeFn = t, this.shuoldWatchGroup = e ? .watchGroup ? ? this.shuoldWatchGroup, this.connection = this.getPresenceConnection();
                    const n = {
                        presenceSessionId: this.sessionId,
                        watchGroup: e ? .watchGroup
                    };
                    return this.connection.on("@duplexer:disconnected", this.onDisconnectFn), this.connection.subscribe(this.scope, {
                        info: n
                    }).on("@duplexer:subscription_succeeded", this.onSubscribe).on("update-state", this.handleStateChanges)
                }
                disconnect() {
                    this.connection && (this.connection.disconnect(), this.connection = void 0)
                }
                onDisconnect(t) {
                    this.onDisconnectFn = t
                }
                async setState(t) {
                    this.storeState(t), this.connection && await (await this.presenceClient()).setData({
                        sessionId: this.sessionId,
                        scope: this.scope,
                        data: this.state
                    })
                }
                getSessionId() {
                    return this.sessionId
                }
                async emptyGroup() {
                    await (await this.presenceClient()).resetScope({
                        scope: this.scope
                    })
                }
                storeState(t) {
                    this.state = { ...t,
                        __lastInactivity: this.lastInactivity
                    }
                }
                refreshState() {
                    return this.setState(this.state)
                }
                async keepAlive() {
                    this.connection ? (await this.refreshState().catch((() => {})), this.keepAliveTimer && clearTimeout(this.keepAliveTimer), this.keepAliveTimer = setTimeout((() => this.keepAlive()), this.keepAliveInterval)) : clearTimeout(this.keepAliveTimer)
                }
                onStateChange(t) {
                    this.onStateChangeFn(l(this.list), t ? l(t) : void 0)
                }
                updateList(t) {
                    const e = this.list.find((e => e.userId === t.userId && e.sessionId === t.sessionId));
                    return t.activity = function(t) {
                        return "number" == typeof t.data.__lastInactivity ? {
                            status: a.IDLE,
                            lastSeen: t.data.__lastInactivity
                        } : {
                            status: a.ACTIVE,
                            lastSeen: null
                        }
                    }(t), e && (n = e, i = t, JSON.stringify(n) === JSON.stringify(i)) ? v.NONE : (e && (this.list = this.list.filter((t => t !== e))), t.status === r.ONLINE && this.list.push(t), v.STATE);
                    var n, i
                }
                async presenceClient() {
                    return await this.initPresenceApi(), this.presenceApi({
                        Authorization: this.getSignedInstance()
                    })
                }
            }
            const g = t => t.split("#");
            const y = "_",
                I = /{(.*)}/,
                S = new RegExp(`\\.(${["wix.com","editorx.com"].join("|")})$`),
                T = new RegExp(`\\.(${["42.wixprod.net","uw2-edt-1.wixprod.net"].join("|")})$`),
                _ = new RegExp(".*\\.dev.wix-code.com$");

            function E(t) {
                const e = function(t, e) {
                    const n = e[t] || e[y];
                    if (!n && function(t) {
                            return !!t.match(/\._base_domain_$/)
                        }(t)) return e[O];
                    return n
                }(function(t) {
                    return t.replace("create.editorx.com", "editor.editorx.com")
                }(t.host).replace(S, "._base_domain_").replace(T, "._api_base_domain_").replace(_, "*.dev.wix-code.com"), t.domainToMappings);
                var n, i;
                return function(t, e) {
                    const n = e ? .find((e => t.startsWith(e.destPath)));
                    if (!n) return t;
                    return n.srcPath + t.slice(n.destPath.length)
                }((n = t.protoPath, i = t.data || {}, n.split("/").map((t => function(t, e) {
                    const n = t.match(I) || [],
                        i = n[1];
                    if (i) {
                        const s = t.replace(n[0], "");
                        return function(t, e, n, i) {
                            let s = t;
                            for (const t of e.split(".")) {
                                if (!s) return n;
                                s = s[t]
                            }
                            return `${s}${i}`
                        }(e, i, t, s)
                    }
                    return t
                }(t, i))).join("/")), e)
            }
            const O = "www._base_domain_";
            var C;

            function w(t, e = {}, n) {
                return function(i = {}, s) {
                    return "string" == typeof i ? i : r(t, i);

                    function r(t, e) {
                        const n = {};
                        return [null, void 0].includes(e) ? e : (Object.entries(e).forEach((([e, i]) => {
                            const s = t[e],
                                {
                                    schemaName: r,
                                    schemaType: c
                                } = function(t = "") {
                                    const [e, n] = g(t);
                                    return n ? {
                                        schemaName: n,
                                        schemaType: e
                                    } : {
                                        schemaName: e
                                    }
                                }(s),
                                u = "Map" === c;
                            let h;
                            h = a(r) ? .checkRepetable ? .(i) ? ? Array.isArray(i) ? i.map((t => o(t, r))) : u ? function(t, e) {
                                return Object.entries(t).reduce(((t, [n, i]) => (t[n] = o(i, e), t)), {})
                            }(i, r) : o(i, r), n[e] = h
                        })), n)
                    }

                    function o(t, n) {
                        if (!n) return t;
                        const i = e[n];
                        if (a(n)) return a(n).transform(t);
                        if (i) return r(i, t);
                        throw new Error(`${n} is neither schema nor serializable type`)
                    }

                    function a(t) {
                        return n[t] ? .[s]
                    }
                }
            }! function(t) {
                t[t.TO_JSON = 0] = "TO_JSON", t[t.FROM_JSON = 1] = "FROM_JSON"
            }(C || (C = {}));
            const P = {
                    types: ["google.protobuf.Timestamp"],
                    [C.TO_JSON]: {
                        transform: t => t ? .toISOString()
                    },
                    [C.FROM_JSON]: {
                        transform: t => t ? new Date(t) : void 0
                    }
                },
                x = {
                    types: ["google.protobuf.FieldMask"],
                    [C.TO_JSON]: {
                        transform: t => t.join(","),
                        checkRepetable: t => t.some((t => Array.isArray(t)))
                    },
                    [C.FROM_JSON]: {
                        transform: t => "object" == typeof t ? t.paths : t.split(",")
                    }
                },
                b = {
                    types: ["google.protobuf.BytesValue", "BYTES"],
                    [C.TO_JSON]: {
                        transform: t => {
                            const e = t.reduce(((t, e) => t + String.fromCharCode(e)), "");
                            return btoa(e)
                        }
                    },
                    [C.FROM_JSON]: {
                        transform: t => Uint8Array.from(atob(t), (t => t.charCodeAt(0)))
                    }
                },
                A = {
                    types: ["google.protobuf.Duration"],
                    [C.TO_JSON]: {
                        transform: ({
                            seconds: t = "0",
                            nanos: e = 0
                        }) => {
                            let n = "";
                            return 0 !== e && (n = `.${e.toString().padStart(9,"0")}`), `${t}${n}s`
                        }
                    },
                    [C.FROM_JSON]: {
                        transform: t => {
                            const [e, n] = t.substring(0, t.length - 1).split(".");
                            return {
                                seconds: e,
                                nanos: N(n)
                            }
                        }
                    }
                };

            function N(t) {
                let e = 0;
                if (void 0 !== t) {
                    const n = 3 - t.length / 3;
                    e = parseInt(t, 10) * Math.pow(1e3, n)
                }
                return e
            }
            const R = {
                types: ["FLOAT", "DOUBLE", "google.protobuf.FloatValue", "google.protobuf.DoubleValue"],
                [C.TO_JSON]: {
                    transform: t => isFinite(t) ? t : t.toString()
                },
                [C.FROM_JSON]: {
                    transform: t => "NaN" === t ? NaN : "Infinity" === t ? 1 / 0 : "-Infinity" === t ? -1 / 0 : t
                }
            };
            const k = [...[P, x, b, A, R]].reduce(((t, e) => ({ ...t,
                ...e.types.reduce(((t, n) => ({ ...t,
                    [n]: e
                })), {})
            })), {});

            function F(t, e = {}) {
                const n = w(t, e, k);
                return {
                    fromJSON(t) {
                        const e = function(t) {
                            try {
                                return JSON.parse(t)
                            } catch (t) {}
                        }(t) || t;
                        return n(e, C.FROM_JSON)
                    },
                    toJSON: t => n(t, C.TO_JSON)
                }
            }
            var D, U, j, M = {
                    sessionStartDate: "google.protobuf.Timestamp",
                    lastActiveDate: "google.protobuf.Timestamp"
                },
                H = {
                    payload: "_payload"
                },
                L = {
                    presence: "_presence"
                },
                W = {},
                J = {
                    mask: "google.protobuf.FieldMask",
                    presence: "_presence"
                },
                B = {};

            function V(t) {
                return E(Object.assign(t, {
                    domainToMappings: {
                        "www._base_domain_": [{
                            srcPath: "/_api/chat-presence-server",
                            destPath: "/api"
                        }],
                        "api._api_base_domain_": [{
                            srcPath: "/presence-server",
                            destPath: ""
                        }],
                        "engage.wixapps.net": [{
                            srcPath: "/_api/chat-presence-server",
                            destPath: "/api"
                        }],
                        "manage._base_domain_": [{
                            srcPath: "/_api/chat-presence-server",
                            destPath: "/api"
                        }],
                        _: [{
                            srcPath: "/_api/chat-presence-server",
                            destPath: "/api"
                        }]
                    }
                }))
            }! function(t) {
                t.UNKNOWN = "UNKNOWN", t.ACTIVE = "ACTIVE", t.OFFLINE = "OFFLINE"
            }(D || (D = {})),
            function(t) {
                t.UNKNOWN = "UNKNOWN", t.DESKTOP = "DESKTOP", t.MOBILE = "MOBILE"
            }(U || (U = {})),
            function(t) {
                t.UNDEFINED = "UNDEFINED", t.VIEWER = "VIEWER", t.EDITOR_X = "EDITOR_X"
            }(j || (j = {}));
            class G {
                constructor({
                    getPresenceConnection: t,
                    scope: e,
                    httpClient: n,
                    getInitialState: i = (() => ({})),
                    keepAliveInterval: s = 24e4,
                    isIdleMs: r,
                    onIdle: o,
                    onActive: a
                }) {
                    this.sessionId = p(), this.onDisconnectFn = () => {}, this.shouldWatchGroup = !0, this.onIdle = () => {
                        this.updatePresence({}), this.onIdleFn()
                    }, this.onActive = async () => {
                        try {
                            await this.onActiveFn()
                        } finally {
                            this.refreshState()
                        }
                    }, this.onSubscribe = async () => {
                        await this.createState(this.getInitialState()), await this.keepAlive(), this.idle.listen()
                    }, this.getPresenceConnection = t, this.keepAliveInterval = s, this.scope = this.convertScope(e), this.isIdleMs = window.__PRESENCE_IDLE_TIME ? ? r ? ? 6e5, this.onIdleFn = o ? ? (() => {}), this.onActiveFn = a ? ? (() => {}), this.getInitialState = i, this.idle = h({
                        isIdleTime: this.isIdleMs,
                        onIdle: this.onIdle,
                        onActive: this.onActive
                    }), this.httpClient = n
                }
                track(t) {
                    this.shouldWatchGroup = t ? .watchGroup ? ? this.shouldWatchGroup, this.connection = this.getPresenceConnection();
                    const e = {
                        presenceSessionId: this.sessionId,
                        watchGroup: t ? .watchGroup
                    };
                    return this.connection.on("@duplexer:disconnected", this.onDisconnectFn), this.connection.subscribe(this.getConnectionScope(this.scope), {
                        info: e
                    }).on("@duplexer:subscription_succeeded", this.onSubscribe)
                }
                disconnect() {
                    this.connection && (this.connection.disconnect(), this.connection = void 0)
                }
                onDisconnect(t) {
                    this.onDisconnectFn = t
                }
                async createState(t) {
                    const e = {
                        payload: t,
                        scope: this.scope,
                        sessionId: this.sessionId,
                        status: D.ACTIVE
                    };
                    await this.httpClient.request(function(t) {
                        return function(e) {
                            var n = e.host,
                                i = F(L, {
                                    _payload: M,
                                    _presence: H
                                }).toJSON,
                                s = F(W, {}).fromJSON,
                                r = i(t);
                            return {
                                method: "POST",
                                url: V({
                                    protoPath: "/api/v2/presences/{presence.scope}",
                                    data: r,
                                    host: n
                                }),
                                data: r,
                                transformResponse: s
                            }
                        }
                    }({
                        presence: e
                    }))
                }
                async updateState(t) {
                    var e;
                    this.connection && await this.httpClient.request((e = t, function(t) {
                        var n = t.host,
                            i = F(J, {
                                _payload: M,
                                _presence: H
                            }).toJSON,
                            s = F(B, {}).fromJSON,
                            r = i(e);
                        return {
                            method: "PATCH",
                            url: V({
                                protoPath: "/api/v2/presences/{presence.scope}",
                                data: r,
                                host: n
                            }),
                            data: r,
                            transformResponse: s
                        }
                    }))
                }
                preparePayload(t = {}) {
                    const e = {
                        lastActiveDate: new Date,
                        ...t
                    };
                    return {
                        payload: e,
                        mask: Object.keys(e).map((t => `payload.${t}`))
                    }
                }
                async updatePresence(t, e = []) {
                    const {
                        payload: n,
                        mask: i
                    } = this.preparePayload(t), s = Array.from(new Set(i.concat(e)));
                    await this.updateState({
                        mask: s,
                        presence: {
                            payload: n,
                            scope: this.scope,
                            sessionId: this.sessionId,
                            status: D.ACTIVE
                        }
                    })
                }
                getSessionId() {
                    return this.sessionId
                }
                refreshState() {
                    return this.updatePresence({})
                }
                async keepAlive() {
                    this.connection ? (await this.refreshState().catch((() => {})), this.keepAliveTimer && clearTimeout(this.keepAliveTimer), this.keepAliveTimer = setTimeout((() => this.keepAlive()), this.keepAliveInterval)) : clearTimeout(this.keepAliveTimer)
                }
                getConnectionScope(t) {
                    switch (t) {
                        case j.VIEWER:
                            return o.VIEWER;
                        case j.EDITOR_X:
                            return o.EDITOR_X;
                        default:
                            return ""
                    }
                }
                convertScope(t) {
                    switch (t) {
                        case o.EDITOR_X:
                            return j.EDITOR_X;
                        case o.VIEWER:
                            return j.VIEWER;
                        default:
                            return j.UNDEFINED
                    }
                }
            }
            class $ {
                constructor({
                    duplexer: t,
                    getSignedInstance: e,
                    httpClient: n
                }) {
                    this.duplexer = t, this.getSignedInstance = e ? ? (() => ""), this.httpClient = n
                }
                group(t, e) {
                    ! function(t) {
                        if (!Object.values(o).includes(t)) throw new Error(`scope ${t} is invalid!`)
                    }(t);
                    return new m({
                        getPresenceConnection: () => this.getConnection(),
                        scope: t,
                        getSignedInstance: this.getSignedInstance,
                        initialState: e ? .initialState,
                        keepAliveInterval: e ? .keepAliveInterval,
                        onIdle: e ? .onIdle,
                        onActive: e ? .onActive,
                        isIdleMs: e ? .isIdleMs
                    })
                }
                groupV2(t, e) {
                    if (!this.httpClient) throw new Error("Cannot init presence GroupV2 without HttpClient instance");
                    return new G({
                        getPresenceConnection: () => this.getConnection(),
                        scope: t,
                        httpClient: this.httpClient,
                        getInitialState: e ? .getInitialState,
                        keepAliveInterval: e ? .keepAliveInterval,
                        onIdle: e ? .onIdle,
                        onActive: e ? .onActive,
                        isIdleMs: e ? .isIdleMs
                    })
                }
                getConnection() {
                    return this.duplexer.connect({
                        appDefId: "401c08e7-b43e-4323-99f9-1f9f8138ff88"
                    })
                }
            }
        },
        64050: function(t, e, n) {
            "use strict";
            n.r(e), e.default = function t(e) {
                function n(t) {
                    return function(e, n) {
                        return r(e, Object.assign({
                            method: t
                        }, n))
                    }
                }

                function i(t) {
                    return function(e, n, i) {
                        return r(e, Object.assign({
                            method: t,
                            data: n
                        }, i))
                    }
                }

                function s(t, e, n) {
                    if (Array.isArray(t)) return t.concat(e);
                    if (e && "object" == typeof e) {
                        var i, r = {};
                        if (t)
                            for (i in t) r[n ? i.toLowerCase() : i] = t[i];
                        for (i in e) {
                            var o = n ? i.toLowerCase() : i;
                            "headers" === o && (n = !0), r[o] = i in r ? s(r[o], e[i], n) : e[i]
                        }
                        return r
                    }
                    return e
                }

                function r(t, n) {
                    "string" != typeof t && (t = (n = t).url);
                    var i = s(e, n || {}),
                        r = i.data;
                    if (i.transformRequest)
                        for (var o = 0; o < i.transformRequest.length; o++) {
                            var a = i.transformRequest[o](r, i.headers);
                            void 0 !== a && (r = a)
                        }
                    var c = {};
                    if (r && "object" == typeof r && (r = JSON.stringify(r), c["Content-Type"] = "application/json"), i.xsrfCookieName)
                        for (var u = document.cookie.split(/ *[;=] */), h = 0; h < u.length; h += 2)
                            if (u[h] == i.xsrfCookieName) {
                                c[i.xsrfHeaderName] = decodeURIComponent(u[h + 1]);
                                break
                            }
                    i.auth && (c.Authorization = i.auth);
                    var p = {};
                    return p.config = n, fetch(t, {
                        method: i.method,
                        body: r,
                        headers: s(i.headers, c, !0)
                    }).then((function(t) {
                        var e;
                        for (e in t) "function" != typeof t[e] && (p[e] = t[e]);
                        return (i.validateStatus ? i.validateStatus(t.status) : t.ok) ? ("stream" === i.responseType ? Promise.resolve(t.body) : t[i.responseType || "text"]()).then((function(t) {
                            return p.data = t, p
                        })) : Promise.reject(t)
                    }))
                }
                return e = e || {}, r.request = r, r.get = n("get"), r.delete = n("delete"), r.options = n("options"), r.post = i("post"), r.put = i("put"), r.patch = i("patch"), r.all = Promise.all, r.spread = function(t) {
                    return function(e) {
                        return t.apply(this, e)
                    }
                }, r.CancelToken = self.AbortController || Object, r.create = t, r
            }()
        }
    }
]);
//# sourceMappingURL=5451.chunk.min.js.map
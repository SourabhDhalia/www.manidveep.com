(('undefined' != typeof self
  ? self
  : this
).webpackJsonp__wix_wixstores_client_product_page =
  ('undefined' != typeof self ? self : this)
    .webpackJsonp__wix_wixstores_client_product_page || []).push([
  [6175],
  {
    41584: (e, o, t) => {
      'use strict';
      t.r(o),
        t.d(o, {
          classes: () => i,
          cssStates: () => d,
          keyframes: () => a,
          layers: () => r,
          namespace: () => n,
          st: () => p,
          stVars: () => s,
          style: () => c,
          vars: () => l,
        });
      var n = 'oP54kXy',
        i = {
          root: 's__0ItYti',
          arrowIcon: 'sisr1nO',
          optionIcon: 'sUiXYEa',
          childrenWrapper: 'sucHt9_',
        },
        a = {},
        r = {},
        s = {},
        l = {
          'wix-color-1': '--wix-color-1',
          'wix-color-5': '--wix-color-5',
          'wix-ui-tpa-dropdown-suffix-padding-inline-end':
            '--wix-ui-tpa-dropdown-suffix-padding-inline-end',
          arrowIconSize: '--DropdownBase4050616950-arrowIconSize',
        },
        d = t.stc.bind(null, n),
        c = t.sts.bind(null, n),
        p = c;
    },
    394: (e, o, t) => {
      'use strict';
      t.r(o),
        t.d(o, {
          classes: () => i,
          cssStates: () => d,
          keyframes: () => a,
          layers: () => r,
          namespace: () => n,
          st: () => p,
          stVars: () => s,
          style: () => c,
          vars: () => l,
        });
      var n = 'olLJ31X',
        i = {
          root: 'seqV1UH',
          wrapper: 'sqZdLv7',
          optionIcon: 's__93HH8i',
          suffixContainer: 'scs9UXX',
          arrowIcon: 'scCehKA',
          loader: 'sec4TEb',
          errorIcon: 'sAyW_38',
          errorIconWrapper: 'sW2aOyI',
        },
        a = {},
        r = {},
        s = {},
        l = {
          'wix-color-29': '--wix-color-29',
          'wix-color-1': '--wix-color-1',
          'wix-color-4': '--wix-color-4',
          'wix-color-5': '--wix-color-5',
          'wix-ui-tpa-dropdown-main-button-text-color':
            '--wix-ui-tpa-dropdown-main-button-text-color',
          'wix-ui-tpa-dropdown-hover-text-color':
            '--wix-ui-tpa-dropdown-hover-text-color',
          'wix-ui-tpa-dropdown-main-text-font':
            '--wix-ui-tpa-dropdown-main-text-font',
          'wix-ui-tpa-dropdown-readonly-button-text-font':
            '--wix-ui-tpa-dropdown-readonly-button-text-font',
          'wix-ui-tpa-dropdown-main-border-radius':
            '--wix-ui-tpa-dropdown-main-border-radius',
          'wix-ui-tpa-dropdown-hover-border-radius':
            '--wix-ui-tpa-dropdown-hover-border-radius',
          'wix-ui-tpa-dropdown-readonly-button-border-radius':
            '--wix-ui-tpa-dropdown-readonly-button-border-radius',
          'wix-ui-tpa-dropdown-main-button-border-color':
            '--wix-ui-tpa-dropdown-main-button-border-color',
          'wix-ui-tpa-dropdown-hover-border-color':
            '--wix-ui-tpa-dropdown-hover-border-color',
          'wix-ui-tpa-dropdown-main-border-width':
            '--wix-ui-tpa-dropdown-main-border-width',
          'wix-ui-tpa-dropdown-hover-border-width':
            '--wix-ui-tpa-dropdown-hover-border-width',
          'wix-ui-tpa-dropdown-hover-background-color':
            '--wix-ui-tpa-dropdown-hover-background-color',
          'wix-ui-tpa-dropdown-hover-background-opacity':
            '--wix-ui-tpa-dropdown-hover-background-opacity',
          'wix-ui-tpa-dropdown-readonly-button-border-color':
            '--wix-ui-tpa-dropdown-readonly-button-border-color',
          'wix-ui-tpa-dropdown-native-select-main-button-text-disabled-color':
            '--wix-ui-tpa-dropdown-native-select-main-button-text-disabled-color',
          'wix-ui-tpa-dropdown-native-select-main-background-color':
            '--wix-ui-tpa-dropdown-native-select-main-background-color',
          'wix-ui-tpa-dropdown-native-select-main-placeholder-color':
            '--wix-ui-tpa-dropdown-native-select-main-placeholder-color',
          'wix-ui-tpa-dropdown-native-select-main-placeholder-opacity':
            '--wix-ui-tpa-dropdown-native-select-main-placeholder-opacity',
          'wix-ui-tpa-dropdown-native-select-readonly-button-background-color':
            '--wix-ui-tpa-dropdown-native-select-readonly-button-background-color',
          'wix-ui-tpa-dropdown-native-select-readonly-button-border-width':
            '--wix-ui-tpa-dropdown-native-select-readonly-button-border-width',
          'wix-ui-tpa-dropdown-native-select-readonly-button-text-color':
            '--wix-ui-tpa-dropdown-native-select-readonly-button-text-color',
          'wix-ui-tpa-dropdown-native-select-readonly-button-icon-color':
            '--wix-ui-tpa-dropdown-native-select-readonly-button-icon-color',
          'wix-ui-tpa-dropdown-native-select-readonly-button-icon-size':
            '--wix-ui-tpa-dropdown-native-select-readonly-button-icon-size',
          'wix-ui-tpa-dropdown-native-select-readonly-placeholder-color':
            '--wix-ui-tpa-dropdown-native-select-readonly-placeholder-color',
          arrowIconSize: '--DropdownNativeSelect3255023207-arrowIconSize',
        },
        d = t.stc.bind(null, n),
        c = t.sts.bind(null, n),
        p = c;
    },
    90892: (e, o, t) => {
      'use strict';
      t.r(o),
        t.d(o, {
          classes: () => i,
          cssStates: () => d,
          keyframes: () => a,
          layers: () => r,
          namespace: () => n,
          st: () => p,
          stVars: () => s,
          style: () => c,
          vars: () => l,
        });
      var n = 'oxRBcM_',
        i = {
          root: 'sVWlqbr',
          insetFocusRing: 'sBWwA7u',
          contentWrapper: 'sYd0Dm3',
          title: 'simw42b',
          subtitle: 'sjfLmE0',
          suffix: 'sl6NPrK',
          icon: 's__9dfeLX',
        },
        a = {},
        r = {},
        s = {},
        l = {
          'wix-color-29': '--wix-color-29',
          'wix-color-5': '--wix-color-5',
          'wix-color-4': '--wix-color-4',
          'wix-ui-tpa-dropdown-option-main-title-text-color':
            '--wix-ui-tpa-dropdown-option-main-title-text-color',
          'wix-ui-tpa-dropdown-option-main-title-text-font':
            '--wix-ui-tpa-dropdown-option-main-title-text-font',
          'wix-ui-tpa-dropdown-option-main-item-text-disabled-color':
            '--wix-ui-tpa-dropdown-option-main-item-text-disabled-color',
          'wix-ui-tpa-dropdown-option-padding-inline-start':
            '--wix-ui-tpa-dropdown-option-padding-inline-start',
          'wix-ui-tpa-dropdown-option-vertical-padding':
            '--wix-ui-tpa-dropdown-option-vertical-padding',
          'wix-ui-tpa-dropdown-option-title-padding-inline-start':
            '--wix-ui-tpa-dropdown-option-title-padding-inline-start',
          'wix-ui-tpa-dropdown-option-title-padding-inline-end':
            '--wix-ui-tpa-dropdown-option-title-padding-inline-end',
        },
        d = t.stc.bind(null, n),
        c = t.sts.bind(null, n),
        p = c;
    },
    49358: (e, o, t) => {
      'use strict';
      t.r(o),
        t.d(o, {
          classes: () => i,
          cssStates: () => d,
          keyframes: () => a,
          layers: () => r,
          namespace: () => n,
          st: () => p,
          stVars: () => s,
          style: () => c,
          vars: () => l,
        });
      var n = 'os7ll7L',
        i = { root: 's__2Q3b9p' },
        a = {},
        r = {},
        s = {
          dividerHeight: '1px',
          dividerBackgroundColor: 'black',
          dividerOpacity: 'initial',
          dividerMarginTop: 'initial',
          dividerMarginBottom: 'initial',
        },
        l = {},
        d = t.stc.bind(null, n),
        c = t.sts.bind(null, n),
        p = c;
    },
    42292: (e, o, t) => {
      'use strict';
      t.r(o),
        t.d(o, {
          classes: () => i,
          cssStates: () => d,
          keyframes: () => a,
          layers: () => r,
          namespace: () => n,
          st: () => p,
          stVars: () => s,
          style: () => c,
          vars: () => l,
        });
      var n = 'oxnvgOw',
        i = { root: 'sSJs3zy', dropdownContent: 'sgipPT_' },
        a = {},
        r = {},
        s = {},
        l = {},
        d = t.stc.bind(null, n),
        c = t.sts.bind(null, n),
        p = c;
    },
    22598: (e, o, t) => {
      'use strict';
      t.r(o),
        t.d(o, {
          classes: () => i,
          cssStates: () => d,
          keyframes: () => a,
          layers: () => r,
          namespace: () => n,
          st: () => p,
          stVars: () => s,
          style: () => c,
          vars: () => l,
        });
      var n = 'o__2kOYeE',
        i = {
          root: 'szOZU7Q',
          optionsContainer: 'sodAjvH',
          dropdownOption: 's__3MLilV',
        },
        a = {},
        r = {},
        s = {},
        l = {},
        d = t.stc.bind(null, n),
        c = t.sts.bind(null, n),
        p = c;
    },
    62078: (e, o, t) => {
      'use strict';
      t.r(o),
        t.d(o, {
          classes: () => i,
          cssStates: () => d,
          keyframes: () => a,
          layers: () => r,
          namespace: () => n,
          st: () => p,
          stVars: () => s,
          style: () => c,
          vars: () => l,
        });
      var n = 'oIgvoG6',
        i = {
          root: 'siVo_qd',
          highlight: 's__9VaTEe',
          nonHighlight: 'sVgArbA',
        },
        a = {},
        r = {},
        s = {
          hoverBackgroundColor: 'lightgrey',
          selectedBackgroundColor: 'grey',
          selectedHoverBackgroundColor: 'dimgrey',
          disabledBackgroundColor: 'white',
        },
        l = {},
        d = t.stc.bind(null, n),
        c = t.sts.bind(null, n),
        p = c;
    },
    62869: (e, o, t) => {
      e.exports = t(16252).compact;
    },
    44217: (e, o, t) => {
      e.exports = t(16252).debounce;
    },
    82053: (e, o, t) => {
      'use strict';
      t.r(o), t.d(o, { Dropdown: () => Ve });
      var n = t(60751),
        i = t.n(n),
        a = t(21461),
        r = 'oJJgsQ7',
        s = 'sCXW3LK',
        l = 'sgSu0pO',
        d = 'soFgvSL',
        c = 'sybqtVH',
        p = 'sVn7AHK',
        u = 'sNNLshc',
        h = 's__8Ln2VT',
        w = 's_99V6p',
        b = 'sThqT4J',
        m = 'sL_DVCa',
        v = t.sts.bind(null, r);
      var x = t(99528);
      const f = 'dropdown-label',
        g = 'dropdown-label-asterisk',
        y = 'core-dropdown',
        k = 'dropdown-base',
        E = 'native-select',
        C = 'dropdown-base-text',
        O = 'placeholder-option',
        I = 'dropdown-error-tooltip',
        S = 'dropdown-option',
        N = 'dropdown-option-icon',
        D = 'dropdown-option-suffix',
        M = 'dropdown-loader',
        H = 'data-error';
      var _ = t(42292),
        R = t(29798),
        V = t(22598),
        L = t(62078);
      new Array(6)
        .fill(null)
        .map((e, o) =>
          4 === o
            ? { divider: !0 }
            : { id: `${o}`, value: `Input Text ${o + 1}`, isSelectable: o < 3 }
        )
        .map((e, o) => ({
          ...e,
          subtitle:
            0 === o
              ? "The longest subtitle has 2 lines. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
              : `Subtitle Text ${o}`,
        })),
        new Array(6)
          .fill(null)
          .map((e, o) => ({
            id: `${o}`,
            value: `0${o + 1}`,
            isSelectable: !0,
          }));
      const T = (e) =>
          e.map((e) =>
            e.unavailable
              ? {
                  ...e,
                  isSelectable: void 0 === e.isSelectable || e.isSelectable,
                }
              : e
          ),
        A = (e) => `${e}-text`,
        P = (e, o) => `${e}_option-${o}`,
        B = (e) => {
          const {
              id: o,
              option: t,
              isSelected: i,
              isHovered: a,
              onClickHandler: r,
              onMouseEnterHandler: s,
              onMouseLeaveHandler: l,
              dataHook: d,
              unavailable: c,
            } = e,
            { isDisabled: p, isSelectable: u, value: h, role: w } = t,
            b = !p && a,
            m = !p && i,
            v = !u || p || c,
            x = {
              role: w,
              'aria-disabled': v,
              disabled: v,
              ...(u && 'option' === w ? { 'aria-selected': m } : {}),
            };
          return n.createElement(
            'div',
            {
              id: o,
              tabIndex: -1,
              className: (0, L.st)(
                L.classes.root,
                { disabled: p, selectable: u, hovered: b, selected: m },
                e.className
              ),
              'aria-labelledby': o && A(o),
              'data-hook': d,
              ...x,
              onClick: r,
              title: h,
              onMouseEnter: s,
              onMouseLeave: l,
              'aria-hidden': t['aria-hidden'],
            },
            t.render(h)
          );
        };
      B.displayName = 'CoreDropdownOption';
      const F = 'dropdown-content',
        W = 'dropdown-content-options-container',
        $ = 'dropdown-content-option';
      class q extends n.PureComponent {
        constructor(e) {
          super(e),
            (this.optionsContainerRef = null),
            (this.mouseCoords = { screenX: -1, screenY: -1 }),
            (this.state = { hoveredIndex: -1 }),
            (this.onMouseMove = this.onMouseMove.bind(this)),
            (this.onMouseDown = this.onMouseDown.bind(this)),
            (this.onOptionHover = this.onOptionHover.bind(this));
        }
        componentDidMount() {
          if (this.props.selectedId || 0 === this.props.selectedId) {
            const e = this.props.options.findIndex(
              (e) => e.id === this.props.selectedId
            );
            if (e > -1) {
              const o = this.optionsContainerRef.childNodes[e],
                t = this.optionsContainerRef.getBoundingClientRect();
              o.getBoundingClientRect().bottom > t.bottom &&
                (this.optionsContainerRef.scrollTop = Math.min(
                  o.offsetTop +
                    o.clientHeight / 2 -
                    this.optionsContainerRef.offsetHeight / 2,
                  this.optionsContainerRef.scrollHeight
                )),
                this.setHoveredIndex(e);
            }
          }
        }
        setHoveredIndex(e) {
          this.state.hoveredIndex !== e &&
            this.setState({ hoveredIndex: e }, this.onOptionHover);
        }
        onOptionHover() {
          this.props.onOptionHover &&
            this.props.onOptionHover(this.getSelectedOption());
        }
        isValidOptionForSelection(e) {
          return e.isSelectable && !e.isDisabled;
        }
        scrollHoveredIntoView(e) {
          const o = this.optionsContainerRef.childNodes[e],
            t = o.offsetHeight,
            n = o.offsetTop - 1,
            { scrollTop: i, clientHeight: a } = this.optionsContainerRef;
          (i <= n && i + a > n + t) ||
            (this.optionsContainerRef.scrollTop < n
              ? (this.optionsContainerRef.scrollTop = t + n - a)
              : (this.optionsContainerRef.scrollTop = n));
        }
        hoverNextItem(e) {
          const { options: o } = this.props;
          if (!o.find(this.isValidOptionForSelection)) return;
          let { hoveredIndex: t } = this.state;
          for (
            ;
            (t += e),
              t === o.length ? (t = 0) : t < 0 && (t = o.length - 1),
              !this.isValidOptionForSelection(o[t]);

          );
          this.setHoveredIndex(t), this.scrollHoveredIntoView(t);
        }
        getOptionDOMid(e) {
          const o = this.props.id;
          return o ? `${o}_option-${e.id}` : null;
        }
        getSelectedOption() {
          const { options: e } = this.props,
            { hoveredIndex: o } = this.state;
          return o >= 0 && o < e.length
            ? { ...e[o], _DOMid: this.getOptionDOMid(e[o]) }
            : null;
        }
        onMouseMove(e) {
          (this.mouseCoords.screenX = e.screenX),
            (this.mouseCoords.screenY = e.screenY);
        }
        onMouseDown(e) {
          const { onMouseDown: o } = this.props;
          o && o(e);
        }
        onMouseEnter(e, o) {
          (this.mouseCoords.screenX === e.screenX &&
            this.mouseCoords.screenY === e.screenY) ||
            this.setHoveredIndex(o);
        }
        render() {
          const {
              fixedHeader: e,
              fixedFooter: o,
              options: t,
              selectedId: i,
              onOptionClick: a,
              id: r,
              className: s,
              role: l,
              activeDescendant: d,
            } = this.props,
            { hoveredIndex: c } = this.state;
          return n.createElement(
            'div',
            {
              className: (0, V.st)(V.classes.root, s),
              'data-hook': F,
              onMouseMove: this.onMouseMove,
              onMouseDown: this.onMouseDown,
            },
            e,
            n.createElement(
              'div',
              {
                role: l,
                className: V.classes.optionsContainer,
                id: r,
                ref: (e) => (this.optionsContainerRef = e),
                tabIndex: -1,
                'data-hook': W,
                ...(d ? { 'aria-activedescendant': d } : {}),
              },
              (t || []).map((e, o) =>
                n.createElement(B, {
                  className: V.classes.dropdownOption,
                  dataHook: $,
                  key: e.id,
                  id: this.getOptionDOMid(e),
                  option: e,
                  unavailable: e.unavailable,
                  isHovered: c === o,
                  isSelected: i === e.id,
                  onClickHandler: this.isValidOptionForSelection(e)
                    ? () => a(e)
                    : void 0,
                  onMouseEnterHandler: this.isValidOptionForSelection(e)
                    ? (e) => this.onMouseEnter(e, o)
                    : void 0,
                  onMouseLeaveHandler: () => {
                    this.setHoveredIndex(-1);
                  },
                })
              )
            ),
            o
          );
        }
      }
      q.displayName = 'CoreDropdownContent';
      var K = t(216);
      class X extends n.PureComponent {
        constructor(e) {
          super(e),
            (this.close = this.close.bind(this)),
            (this.handleClickOutside = this.handleClickOutside.bind(this)),
            (this.onPopoverClick = this.onPopoverClick.bind(this)),
            (this.onOptionClick = this.onOptionClick.bind(this));
        }
        handleClickOutside() {
          this.close();
        }
        _onExpandedChange(e) {
          this.props.onExpandedChange && this.props.onExpandedChange(e);
        }
        open() {
          this.props.setIsOpen(!0), this._onExpandedChange(!0);
        }
        onPopoverClick() {
          this.props.isOpen ? this.close() : this.open();
        }
        close() {
          this.props.isOpen &&
            (this.props.setIsOpen(!1), this._onExpandedChange(!1));
        }
        onOptionClick(e) {
          const { onSelect: o } = this.props;
          e && (o(e), this.close());
        }
        render() {
          const {
              options: e,
              children: o,
              disabled: t,
              forceContentElementVisibility: i,
              style: a,
              id: r,
              readOnly: s,
              role: l,
              className: d,
              popoverProps: c,
              contentProps: p,
              isOpen: u,
              selectedId: h,
            } = this.props,
            w = Boolean((e && e.length) || p.fixedHeader || p.fixedFooter),
            b = i || (u && !t && !s && w);
          return n.createElement(
            R.h,
            {
              className: (0, _.st)(_.classes.root, { 'content-visible': b }, d),
              onClickOutside: this.handleClickOutside,
              onKeyDown: t || s ? void 0 : this.props.onKeyDown,
              onClick: t || s ? void 0 : () => this.onPopoverClick(),
              shown: b,
              style: a,
              id: r,
              role: l,
              ...c,
              ...(0, K.r)(this.props),
            },
            n.createElement(R.h.Element, null, o),
            n.createElement(
              R.h.Content,
              null,
              n.createElement(q, {
                className: _.classes.dropdownContent,
                options: e,
                selectedId: h,
                onOptionClick: this.onOptionClick,
                onOptionHover: this.props.onOptionHover,
                ...p,
              })
            )
          );
        }
      }
      X.displayName = 'CoreDropdown';
      const z = X;
      var Y = t(55530),
        J = t.n(Y),
        U = t(6206),
        j = t(17038),
        Q = t(41584),
        Z = t(62311),
        G = t(40743);
      const ee = n.forwardRef((e, o) => {
        const {
            selectedOption: t,
            placeholder: i,
            error: a,
            disabled: r,
            upgrade: s,
            className: l,
            isExpanded: d,
            id: c,
            'aria-label': p,
            'aria-labelledby': u,
            'aria-activedescendant': h,
            'aria-describedby': w,
            'aria-required': b,
            'aria-controls': m,
            rtl: v,
            isLoading: x,
            'loading-aria-label': f,
          } = e,
          g = !t || !t.value;
        return n.createElement(
          j.$,
          {
            upgrade: s,
            fullWidth: !0,
            className: (0, Q.st)(
              Q.classes.root,
              { error: a, placeholder: g, upgrade: s, rtl: v },
              l
            ),
            'data-hook': k,
            'data-dropdown-base-error': a,
            disabled: r,
            'aria-activedescendant': h,
            'aria-expanded': d,
            id: c,
            ref: o,
            'aria-label': p,
            'aria-labelledby': u,
            'aria-describedby': w,
            'aria-required': b,
            'aria-invalid': a,
            role: 'combobox',
            'aria-controls': m,
            prefixIcon:
              t && t.icon
                ? n.createElement(
                    'div',
                    { className: Q.classes.optionIcon },
                    t.icon
                  )
                : null,
            suffixIcon: n.createElement(
              n.Fragment,
              null,
              x
                ? n.createElement(Z.y, {
                    className: Q.classes.loader,
                    'data-hook': M,
                    type: G.t.slim,
                    'aria-label': f,
                  })
                : n.createElement(U.A, { className: Q.classes.arrowIcon })
            ),
          },
          n.createElement(
            'div',
            { className: Q.classes.childrenWrapper, 'data-hook': C },
            (t && t.value) || i
          )
        );
      });
      var oe = t(49358);
      const te = (e) => {
        const { children: o, vertical: t } = e,
          i = !!o;
        return n.createElement(
          'div',
          {
            className: (0, oe.st)(
              oe.classes.root,
              { vertical: t && !i, customDivider: i },
              e.className
            ),
            'data-hook': e['data-hook'],
          },
          o
        );
      };
      te.displayName = 'CoreDivider';
      var ne = t(56340),
        ie = t.n(ne),
        ae = t(62869),
        re = t.n(ae);
      const se = (e = null) => ({
          id: e && (e.id || 0 === e.id) ? e.id : ie()('Option'),
          isDisabled: !1,
          isSelectable: !0,
          unavailable: !1,
          value: null,
          render: (e) => e,
          role: 'option',
          ...e,
        }),
        le = (e) => e % 2 == 0,
        de = (e) => e % 2 == 1,
        ce = (e, o) => {
          const t = ((e) => new RegExp(`(${e.replace(/ /g, '|')})`, 'gi'))(
            o.trim().replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
          );
          const i = e.value.split(t),
            a = '' === i[0] ? le : de,
            r = re()(i).map((e, o) =>
              a(o)
                ? n.createElement(
                    'mark',
                    { className: L.classes.highlight, key: o },
                    e
                  )
                : n.createElement(
                    'span',
                    { className: L.classes.nonHighlight, key: o },
                    e
                  )
            );
          return se({
            id: e.id,
            isDisabled: e.isDisabled,
            isSelectable: e.isSelectable,
            value: e.value,
            render: () => e.render(r),
          });
        },
        pe = {
          create: se,
          createDivider: ({ className: e, value: o } = {}) =>
            se({
              id: ie()('Divider'),
              isDisabled: !1,
              isSelectable: !1,
              'aria-hidden': !0,
              render: o
                ? () => n.createElement(te, { className: e }, o)
                : () => n.createElement(te, { className: e }),
            }),
          createHighlighted: (e, o) => (e.value && o ? ce(e, o) : e),
        };
      var ue,
        he,
        we,
        be = t(63355),
        me = t(64759),
        ve = t(90892);
      !(function (e) {
        e.center = 'center';
      })(ue || (ue = {})),
        (function (e) {
          (e.Line = 'line'), (e.Box = 'box');
        })(he || (he = {})),
        (function (e) {
          (e.ellipsis = 'ellipsis'), (e.wrap = 'wrap');
        })(we || (we = {}));
      const xe = (e) => {
        const {
            value: o,
            id: t,
            isSelectable: i,
            subtitle: a,
            icon: r,
            suffix: s,
            isSectionTitle: l,
            className: d,
            unavailable: c,
            indentIcon: p,
            textOverflow: u = we.ellipsis,
            descendantId: h,
            isFocused: w,
          } = e,
          b = n.useRef(null);
        return (
          n.useEffect(() => {
            w && b.current && b.current.scrollIntoView?.({ block: 'nearest' });
          }, [w]),
          n.createElement(
            'div',
            {
              'data-hook': S,
              key: t,
              ref: b,
              className: (0, ve.st)(
                ve.classes.root,
                {
                  withIcon: !!r,
                  sectionTitle: l,
                  selectable: i,
                  unavailable: !!c,
                  indentIcon: !!p,
                  textOverflow: u,
                  isFocused: w,
                },
                d
              ),
            },
            r &&
              n.createElement(
                'div',
                { 'data-hook': N, className: ve.classes.icon },
                r
              ),
            n.createElement(
              'div',
              { className: ve.classes.contentWrapper },
              n.createElement(
                be.E,
                {
                  className: ve.classes.title,
                  typography: me.p.runningText,
                  id: h && A(h),
                  'aria-disabled': !(i && !c),
                },
                o
              ),
              a &&
                n.createElement(
                  be.E,
                  {
                    className: ve.classes.subtitle,
                    typography: me.p.runningText,
                  },
                  a
                )
            ),
            s &&
              n.createElement(
                'div',
                { 'data-hook': D, className: ve.classes.suffix },
                s
              )
          )
        );
      };
      var fe = t(394);
      class ge extends n.Component {
        onSelect(e) {
          const { selectedOption: o } = this.props,
            t = e.target.value;
          if ((o && o.id) === t) return;
          const n = this.props.options.find(({ id: e }) => e === t);
          this.props.onSelect(n);
        }
        renderOptions(e) {
          const { placeholder: o, options: t } = this.props;
          return n.createElement(
            n.Fragment,
            null,
            e &&
              n.createElement(
                'option',
                { 'data-hook': O, value: '', disabled: !0, hidden: !t.length },
                o
              ),
            t.map((e, o) =>
              e.divider
                ? null
                : n.createElement(
                    'option',
                    { key: o, value: e.id, disabled: !e.isSelectable },
                    e.value
                  )
            )
          );
        }
        renderOptionIcon() {
          return n.createElement(
            'div',
            { className: fe.classes.optionIcon },
            this.props.selectedOption.icon
          );
        }
        getDataAttributes() {
          const { error: e } = this.props;
          return { [H]: e };
        }
        render() {
          const {
              disabled: e,
              readOnly: o,
              selectedOption: t,
              error: i,
              errorMessage: a,
              'aria-label': r,
              'aria-labelledby': s,
              'aria-required': l,
              id: d,
              className: c,
              name: p,
              errorComponent: u,
              newErrorMessage: h,
              isLoading: w,
              'loading-aria-label': b,
            } = this.props,
            { rtl: m } = this.context,
            v = !t || !t.value,
            x = t && !!t.icon,
            f = (0, fe.st)(
              fe.classes.root,
              {
                error: i,
                disabled: e,
                readOnly: o,
                placeholder: v,
                icon: x,
                rtl: m,
                fullWidth: !0,
              },
              c
            );
          return n.createElement(
            'div',
            {
              className: fe.classes.wrapper,
              onClick: (e) => o && e.preventDefault(),
              onMouseDown: (e) => o && e.preventDefault(),
              onKeyDown: (e) => o && e.preventDefault(),
            },
            n.createElement(
              'select',
              {
                ...this.getDataAttributes(),
                defaultValue: '',
                ...(t && { value: t.id }),
                id: d,
                onChange: (e) => !o && this.onSelect(e),
                'data-hook': E,
                ref: this.props.innerRef,
                'aria-label': r,
                'aria-labelledby': s,
                'aria-required': l,
                disabled: e,
                name: p,
                'aria-readonly': o,
                className: f,
              },
              this.renderOptions(v)
            ),
            x ? this.renderOptionIcon() : null,
            i && a && !h && u,
            n.createElement(
              'div',
              { className: fe.classes.suffixContainer },
              w
                ? n.createElement(Z.y, {
                    className: fe.classes.loader,
                    'data-hook': M,
                    type: G.t.slim,
                    'aria-label': b,
                  })
                : n.createElement(U.A, { className: fe.classes.arrowIcon })
            )
          );
        }
      }
      ge.contextType = x.rs;
      const ye = n.forwardRef((e, o) =>
        n.createElement(ge, { ...e, innerRef: o })
      );
      var ke = t(18061),
        Ee = t(88787),
        Ce = t(14507),
        Oe = t(46973),
        Ie = t(68403),
        Se = t(93885),
        Ne = t(96616),
        De = t(99438),
        Me = t(44217),
        He = t.n(Me);
      const _e = (e, o) =>
          e.filter((e) =>
            e.value?.toLocaleLowerCase().startsWith(o.toLocaleLowerCase())
          ),
        Re = ({
          options: e,
          onSelect: o,
          isOpen: t,
          setIsOpen: a,
          focusedOptionId: r,
          setFocusedOptionId: s,
        }) => {
          const [l, d] = i().useState(''),
            c = i().useCallback(
              He()(() => d(''), 500),
              [d]
            );
          (0, n.useEffect)(
            () => () => {
              c.cancel();
            },
            []
          );
          const p = i().useMemo(() => _e(e, l), [e, l]),
            u = (e) => {
              void 0 !== e && s(e);
            },
            h = (e) => {
              a(!0), e.preventDefault();
            },
            w = () => {
              u(e[0].id);
            },
            b = () => {
              u(e[e.length - 1].id);
            },
            m = () => (r ? e.findIndex((e) => e.id === r) : -1),
            v = () => {
              r &&
                ((o) => {
                  const t = e.find((e) => e.id === o);
                  return t?.isSelectable && !t.isDisabled;
                })(r) &&
                o(r);
            },
            x = (o) => {
              switch (o.key) {
                case De.Rk.Enter:
                case De.Rk.Spacebar:
                  v(), o.preventDefault();
                  break;
                case De.Rk.Tab:
                  v();
                  break;
                case De.Rk.Escape:
                  (t = o), a(!1), t.preventDefault();
                  break;
                case De.Rk.ArrowDown:
                  o.preventDefault(),
                    (() => {
                      for (let o = m() + 1; o < e.length; o++) {
                        const t = e[o];
                        if (!t.divider) {
                          u(t.id);
                          break;
                        }
                      }
                    })();
                  break;
                case De.Rk.ArrowUp:
                  o.preventDefault(),
                    o.altKey
                      ? (v(), a(!1))
                      : (() => {
                          const o = m();
                          for (
                            let t = (-1 === o ? e.length : o) - 1;
                            t >= 0;
                            t--
                          ) {
                            const o = e[t];
                            if (!o.divider) {
                              u(o.id);
                              break;
                            }
                          }
                        })();
                  break;
                case De.Rk.Home:
                  o.preventDefault(), w();
                  break;
                case De.Rk.End:
                  o.preventDefault(), b();
                  break;
                case De.Rk.PageUp:
                  o.preventDefault(),
                    (() => {
                      const o = m(),
                        t = Math.max(o - 10, 0);
                      u(e[t].id);
                    })();
                  break;
                case De.Rk.PageDown:
                  o.preventDefault(),
                    (() => {
                      const o = m(),
                        t = Math.min(o + 10, e.length - 1);
                      u(e[t].id);
                    })();
              }
              var t;
            };
          return {
            handleKeydown: (o) => {
              const { key: n } = o;
              if ((0, De.Ju)(n) && n !== De.Rk.Spacebar)
                return (
                  t || h(o),
                  void ((o) => {
                    if (o === l) {
                      const e = (p.findIndex((e) => e.id === r) + 1) % p.length,
                        o = p[e];
                      u(o.id), c.cancel();
                    } else {
                      const t = (l + o).toLocaleLowerCase(),
                        n = _e(e, t);
                      n.length > 0 && u(n[0].id), d(t), c();
                    }
                  })(n)
                );
              t
                ? x(o)
                : ((e) => {
                    switch (e.key) {
                      case De.Rk.ArrowUp:
                        r || w(), h(e);
                        break;
                      case De.Rk.ArrowDown:
                      case De.Rk.Enter:
                      case De.Rk.Spacebar:
                        h(e);
                        break;
                      case De.Rk.Home:
                        w(), h(e);
                        break;
                      case De.Rk.End:
                        b(), h(e);
                        break;
                      default:
                    }
                  })(o);
            },
          };
        },
        Ve = n.forwardRef((e, o) => {
          const {
              label: t,
              alignment: i = 'bottom',
              className: r,
              theme: k = he.Box,
              newErrorMessage: E,
              error: C,
              lang: O,
              errorAppearance: S,
              errorMessage: N,
              outerBorder: D = !1,
              options: M = [],
              initialSelectedId: H,
              selectedId: _,
              readOnly: R,
              upgrade: V,
              dropdownId: L,
              optionsContainerId: A,
              mobileNativeSelect: B,
              'aria-required': F,
              showAsterisk: W,
              onExpandedChange: $,
            } = e,
            q = n.useRef(),
            K = n.useRef(),
            X = n.useRef(),
            { mobile: Y, rtl: U } = (0, x.w_)(),
            [j, Q] = n.useState(!1),
            [Z, G] = n.useState(!1),
            [oe, te] = n.useState(!1),
            [ne, ie] = n.useState(
              _
                ? M.find((e) => e.id === _)?.id || null
                : M.find((e) => e.id === H)?.id || null
            ),
            [ae, re] = n.useState(null),
            se = n.useMemo(() => M.find((e) => e.id === ne), [M, ne]),
            le = n.useMemo(() => (0, Ie.A)('error-message'), []),
            de = n.useMemo(() => (0, Ie.A)('label-for-id_'), []),
            ce = n.useMemo(
              () => A ?? (0, Ie.A)('dropdown-options-container_'),
              [A]
            );
          n.useEffect(() => {
            (0, Se.LV)('Button');
          }, []),
            n.useEffect(() => {
              V ||
                ((0, Se.T5)(
                  'Dropdown',
                  'The current `Dropdown` component API will be deprecated in a future version. Please use the `upgrade` prop in order to use the new API.'
                ),
                (0, Se.oA)('Button'));
            }, [V]),
            n.useEffect(() => {
              _ && ie(M.find((e) => e.id === _)?.id || null);
            }, [_, M]),
            n.useImperativeHandle(
              o,
              () => ({
                focus(e) {
                  K?.current && !B && K.current.focus(e),
                    X?.current && B && X.current.focus(e);
                },
              }),
              []
            );
          const ue = (o) => {
              if (o !== ne) {
                ie(o), te(!1);
                const t = M.find((e) => e.id === o);
                t && e.onChange?.(t), K.current && !B && K.current.focus();
              }
            },
            { handleKeydown: we } = Re({
              options: M.filter((e) => !e.divider),
              onSelect: ue,
              isOpen: oe,
              setIsOpen: te,
              focusedOptionId: ae,
              setFocusedOptionId: re,
            }),
            be = (e) => {
              G(e);
            },
            me = (e) => {
              be(!Z), e.stopPropagation();
            },
            ve = (e) => {
              ('Enter' !== e.key && ' ' !== e.key) || e.stopPropagation();
            },
            fe = () => {
              Q(!0);
            },
            ge = () => {
              const { errorTooltipPlacement: o } = e;
              return n.createElement(Ee.F, {
                'data-hook': I,
                className: u,
                message: N,
                icon: n.createElement(Ce.A, { className: h }),
                tooltipId: le,
                tooltipSkin: Oe.j.Error,
                showTooltip: Z,
                onClick: me,
                onMouseDown: fe,
                onKeyDown: ve,
                tooltipProps: { placement: o },
              });
            },
            De = T(M).map((e) =>
              e.divider
                ? pe.createDivider({ className: m })
                : pe.create({
                    ...e,
                    role: 'option',
                    render: () =>
                      n.createElement(xe, {
                        unavailable: e.unavailable,
                        className: c,
                        ...e,
                        descendantId: P(ce, e.id),
                        isFocused: ae === e.id,
                      }),
                  })
            ),
            Me = E ? a.B : n.Fragment,
            He = F && W,
            _e = {
              alignment: i,
              mobile: Y,
              theme: k,
              rtl: U,
              newErrorMessage: E,
              error: C,
              outerBorder: D,
              readOnly: R,
            };
          return n.createElement(
            Me,
            {
              ...(E && {
                visible: C && !!N,
                message: N,
                errorAppearance: S,
                messageId: le,
                className: v(s, _e, r),
                'data-mobile': Y,
                lang: O,
                'data-hook': e['data-hook'],
              }),
            },
            n.createElement(
              'div',
              {
                ...(!E && {
                  className: v(s, _e, r),
                  'data-mobile': Y,
                  'data-hook': e['data-hook'],
                  lang: O,
                }),
                ref: q,
                onFocus: () => {
                  j || be(!0), Q(!0);
                },
                onBlur: (e) => {
                  q.current &&
                    !q.current.contains(e.relatedTarget) &&
                    (Q(!1), G(!1));
                },
              },
              t &&
                n.createElement(
                  'label',
                  { 'data-hook': f, htmlFor: de, className: l },
                  t,
                  He && n.createElement(Ne.n, { dataHook: g })
                ),
              B && Y
                ? (() => {
                    const {
                      placeholder: o,
                      disabled: t,
                      'aria-label': i,
                      'aria-labelledby': a,
                      name: r,
                      isLoading: s = !1,
                      'loading-aria-label': l,
                    } = e;
                    return n.createElement(ye, {
                      readOnly: R,
                      'aria-label': i,
                      'aria-labelledby': a,
                      'aria-required': F,
                      disabled: t,
                      className: p,
                      error: C,
                      name: r,
                      ref: X,
                      errorMessage: N,
                      options: T(M),
                      onSelect: (e) => ue(e.id),
                      placeholder: o,
                      selectedOption: se,
                      errorComponent: ge(),
                      newErrorMessage: E,
                      isLoading: s,
                      'loading-aria-label': l,
                    });
                  })()
                : (() => {
                    const {
                        placeholder: o = '',
                        disabled: t,
                        forceContentElementVisibility: a,
                        placement: l = 'bottom',
                        'aria-label': c,
                        'aria-labelledby': p,
                        flip: u,
                        fixed: h,
                        appendTo: m,
                        optionsContainerZIndex: x,
                        optionsContainerClass: f,
                        'aria-describedby': g,
                        dynamicWidth: O,
                        isLoading: I = !1,
                        'loading-aria-label': S,
                      } = e,
                      D = !m || 'parent' === m,
                      M = (0, ke.g)([g, N ? le : '']),
                      H = ae && P(ce, ae);
                    return n.createElement(
                      z,
                      {
                        className: v(
                          s,
                          {
                            rtl: U,
                            alignment: i,
                            isMobile: Y,
                            theme: k,
                            readOnly: R,
                          },
                          J()(w, f, { [r]: !D })
                        ),
                        isOpen: oe,
                        setIsOpen: te,
                        popoverProps: {
                          contentClassName: b,
                          placement: l,
                          flip: u,
                          fixed: h,
                          appendTo: m,
                          dynamicWidth: O || !D,
                          zIndex: x,
                        },
                        contentProps: { role: 'listbox', id: ce },
                        'data-hook': y,
                        'data-mobile': Y,
                        options: De,
                        readOnly: R,
                        onSelect: (e) => {
                          e && ue(String(e.id));
                        },
                        selectedId: ne,
                        forceContentElementVisibility: a,
                        onKeyDown: we,
                        onExpandedChange: $,
                      },
                      n.createElement(ee, {
                        className: d,
                        selectedOption: se,
                        placeholder: o,
                        disabled: t,
                        readOnly: R,
                        error: C,
                        upgrade: V,
                        ref: K,
                        rtl: U,
                        id: L ?? de,
                        'aria-activedescendant': oe ? H : void 0,
                        'aria-label': c,
                        'aria-labelledby': p,
                        'aria-required': F,
                        isExpanded: oe,
                        'aria-describedby': M,
                        isLoading: I,
                        'loading-aria-label': S,
                        'aria-controls': ce,
                      }),
                      C && N && !E && ge()
                    );
                  })()
            )
          );
        });
    },
  },
]);
//# sourceMappingURL=LazyWUTComponents.chunk.min.js.map
